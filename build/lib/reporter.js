// Generated by CoffeeScript 1.3.3
(function() {
  var Reporter, StdoutReporter,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Reporter = (function() {

    function Reporter(suite) {
      this._suite_end = __bind(this._suite_end, this);

      this._suite_start = __bind(this._suite_start, this);

      this._test_end = __bind(this._test_end, this);

      this._test_start = __bind(this._test_start, this);

      this._complete = __bind(this._complete, this);
      suite.on('test_start', this._test_start);
      suite.on('test_end', this._test_end);
      suite.on('suite_start', this._suite_start);
      suite.on('suite_end', this._suite_end);
      suite.on('complete', this._complete);
    }

    Reporter.prototype._complete = function() {};

    Reporter.prototype._test_start = function() {};

    Reporter.prototype._test_end = function() {};

    Reporter.prototype._suite_start = function() {};

    Reporter.prototype._suite_end = function() {};

    return Reporter;

  })();

  StdoutReporter = (function(_super) {

    __extends(StdoutReporter, _super);

    function StdoutReporter(suite, options) {
      this._suite_end = __bind(this._suite_end, this);

      this._suite_start = __bind(this._suite_start, this);

      this._test_end = __bind(this._test_end, this);

      this._test_start = __bind(this._test_start, this);

      this._complete = __bind(this._complete, this);
      StdoutReporter.__super__.constructor.call(this, suite);
    }

    StdoutReporter.prototype._complete = function() {
      return process.stdout.write('Complete!\n');
    };

    StdoutReporter.prototype._test_start = function() {
      return process.stdout.write('Test Started\n');
    };

    StdoutReporter.prototype._test_end = function(data) {
      return process.stdout.write("Test Ended: \n");
    };

    StdoutReporter.prototype._suite_start = function() {
      return process.stdout.write('Suite Started\n');
    };

    StdoutReporter.prototype._suite_end = function() {
      return process.stdout.write('Suite Ended\n');
    };

    return StdoutReporter;

  })(Reporter);

  exports.Reporter = Reporter;

  exports.StdoutReporter = StdoutReporter;

}).call(this);
